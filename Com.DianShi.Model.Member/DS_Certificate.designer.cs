#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:2.0.50727.3634
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace Com.DianShi.Model.Member
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[System.Data.Linq.Mapping.DatabaseAttribute(Name="hds0230549_db")]
	public partial class DS_CertificateDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertDS_Certificate(DS_Certificate instance);
    partial void UpdateDS_Certificate(DS_Certificate instance);
    partial void DeleteDS_Certificate(DS_Certificate instance);
    #endregion
		
		public DS_CertificateDataContext() : 
				base(global::Com.DianShi.Model.Member.Properties.Settings.Default.hds0230549_dbConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public DS_CertificateDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DS_CertificateDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DS_CertificateDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DS_CertificateDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<DS_Certificate> DS_Certificate
		{
			get
			{
				return this.GetTable<DS_Certificate>();
			}
		}
	}
	
	[Table(Name="dbo.DS_Certificate")]
	public partial class DS_Certificate : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _CtfName;
		
		private string _IssuingAgency;
		
		private string _IssPhone;
		
		private string _IssWebSite;
		
		private System.DateTime _StartDate;
		
		private System.Nullable<System.DateTime> _EndDate;
		
		private string _CtfNumber;
		
		private string _CtfProfile;
		
		private string _CtfImg;
		
		private byte _CtfType;
		
		private byte _CtfState;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnCtfNameChanging(string value);
    partial void OnCtfNameChanged();
    partial void OnIssuingAgencyChanging(string value);
    partial void OnIssuingAgencyChanged();
    partial void OnIssPhoneChanging(string value);
    partial void OnIssPhoneChanged();
    partial void OnIssWebSiteChanging(string value);
    partial void OnIssWebSiteChanged();
    partial void OnStartDateChanging(System.DateTime value);
    partial void OnStartDateChanged();
    partial void OnEndDateChanging(System.Nullable<System.DateTime> value);
    partial void OnEndDateChanged();
    partial void OnCtfNumberChanging(string value);
    partial void OnCtfNumberChanged();
    partial void OnCtfProfileChanging(string value);
    partial void OnCtfProfileChanged();
    partial void OnCtfImgChanging(string value);
    partial void OnCtfImgChanged();
    partial void OnCtfTypeChanging(byte value);
    partial void OnCtfTypeChanged();
    partial void OnCtfStateChanging(byte value);
    partial void OnCtfStateChanged();
    #endregion
		
		public DS_Certificate()
		{
			OnCreated();
		}
		
		[Column(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true, IsVersion=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[Column(Storage="_CtfName", DbType="NVarChar(50) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string CtfName
		{
			get
			{
				return this._CtfName;
			}
			set
			{
				if ((this._CtfName != value))
				{
					this.OnCtfNameChanging(value);
					this.SendPropertyChanging();
					this._CtfName = value;
					this.SendPropertyChanged("CtfName");
					this.OnCtfNameChanged();
				}
			}
		}
		
		[Column(Storage="_IssuingAgency", DbType="NVarChar(100) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string IssuingAgency
		{
			get
			{
				return this._IssuingAgency;
			}
			set
			{
				if ((this._IssuingAgency != value))
				{
					this.OnIssuingAgencyChanging(value);
					this.SendPropertyChanging();
					this._IssuingAgency = value;
					this.SendPropertyChanged("IssuingAgency");
					this.OnIssuingAgencyChanged();
				}
			}
		}
		
		[Column(Storage="_IssPhone", DbType="NVarChar(20)", UpdateCheck=UpdateCheck.Never)]
		public string IssPhone
		{
			get
			{
				return this._IssPhone;
			}
			set
			{
				if ((this._IssPhone != value))
				{
					this.OnIssPhoneChanging(value);
					this.SendPropertyChanging();
					this._IssPhone = value;
					this.SendPropertyChanged("IssPhone");
					this.OnIssPhoneChanged();
				}
			}
		}
		
		[Column(Storage="_IssWebSite", DbType="NVarChar(250)", UpdateCheck=UpdateCheck.Never)]
		public string IssWebSite
		{
			get
			{
				return this._IssWebSite;
			}
			set
			{
				if ((this._IssWebSite != value))
				{
					this.OnIssWebSiteChanging(value);
					this.SendPropertyChanging();
					this._IssWebSite = value;
					this.SendPropertyChanged("IssWebSite");
					this.OnIssWebSiteChanged();
				}
			}
		}
		
		[Column(Storage="_StartDate", DbType="DateTime NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime StartDate
		{
			get
			{
				return this._StartDate;
			}
			set
			{
				if ((this._StartDate != value))
				{
					this.OnStartDateChanging(value);
					this.SendPropertyChanging();
					this._StartDate = value;
					this.SendPropertyChanged("StartDate");
					this.OnStartDateChanged();
				}
			}
		}
		
		[Column(Storage="_EndDate", DbType="DateTime", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> EndDate
		{
			get
			{
				return this._EndDate;
			}
			set
			{
				if ((this._EndDate != value))
				{
					this.OnEndDateChanging(value);
					this.SendPropertyChanging();
					this._EndDate = value;
					this.SendPropertyChanged("EndDate");
					this.OnEndDateChanged();
				}
			}
		}
		
		[Column(Storage="_CtfNumber", DbType="NVarChar(50)", UpdateCheck=UpdateCheck.Never)]
		public string CtfNumber
		{
			get
			{
				return this._CtfNumber;
			}
			set
			{
				if ((this._CtfNumber != value))
				{
					this.OnCtfNumberChanging(value);
					this.SendPropertyChanging();
					this._CtfNumber = value;
					this.SendPropertyChanged("CtfNumber");
					this.OnCtfNumberChanged();
				}
			}
		}
		
		[Column(Storage="_CtfProfile", DbType="NVarChar(500)", UpdateCheck=UpdateCheck.Never)]
		public string CtfProfile
		{
			get
			{
				return this._CtfProfile;
			}
			set
			{
				if ((this._CtfProfile != value))
				{
					this.OnCtfProfileChanging(value);
					this.SendPropertyChanging();
					this._CtfProfile = value;
					this.SendPropertyChanged("CtfProfile");
					this.OnCtfProfileChanged();
				}
			}
		}
		
		[Column(Storage="_CtfImg", DbType="NVarChar(250) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string CtfImg
		{
			get
			{
				return this._CtfImg;
			}
			set
			{
				if ((this._CtfImg != value))
				{
					this.OnCtfImgChanging(value);
					this.SendPropertyChanging();
					this._CtfImg = value;
					this.SendPropertyChanged("CtfImg");
					this.OnCtfImgChanged();
				}
			}
		}
		
		[Column(Storage="_CtfType", DbType="TinyInt NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public byte CtfType
		{
			get
			{
				return this._CtfType;
			}
			set
			{
				if ((this._CtfType != value))
				{
					this.OnCtfTypeChanging(value);
					this.SendPropertyChanging();
					this._CtfType = value;
					this.SendPropertyChanged("CtfType");
					this.OnCtfTypeChanged();
				}
			}
		}
		
		[Column(Storage="_CtfState", DbType="TinyInt NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public byte CtfState
		{
			get
			{
				return this._CtfState;
			}
			set
			{
				if ((this._CtfState != value))
				{
					this.OnCtfStateChanging(value);
					this.SendPropertyChanging();
					this._CtfState = value;
					this.SendPropertyChanged("CtfState");
					this.OnCtfStateChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
