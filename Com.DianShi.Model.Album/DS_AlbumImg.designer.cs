#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Com.DianShi.Model.Album
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="DianShi")]
	public partial class DS_AlbumImgDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertDS_AlbumImg(DS_AlbumImg instance);
    partial void UpdateDS_AlbumImg(DS_AlbumImg instance);
    partial void DeleteDS_AlbumImg(DS_AlbumImg instance);
    #endregion
		
		public DS_AlbumImgDataContext() : 
				base(global::Com.DianShi.Model.Album.Properties.Settings.Default.DianShiConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public DS_AlbumImgDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DS_AlbumImgDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DS_AlbumImgDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DS_AlbumImgDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<DS_AlbumImg> DS_AlbumImg
		{
			get
			{
				return this.GetTable<DS_AlbumImg>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DS_AlbumImg")]
	public partial class DS_AlbumImg : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _AlbumID;
		
		private string _ImgUrl;
		
		private string _ImgName;
		
		private string _ImgTitle;
		
		private string _ImgDescript;
		
		private int _Px;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnAlbumIDChanging(int value);
    partial void OnAlbumIDChanged();
    partial void OnImgUrlChanging(string value);
    partial void OnImgUrlChanged();
    partial void OnImgNameChanging(string value);
    partial void OnImgNameChanged();
    partial void OnImgTitleChanging(string value);
    partial void OnImgTitleChanged();
    partial void OnImgDescriptChanging(string value);
    partial void OnImgDescriptChanged();
    partial void OnPxChanging(int value);
    partial void OnPxChanged();
    #endregion
		
		public DS_AlbumImg()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true, IsVersion=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AlbumID", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public int AlbumID
		{
			get
			{
				return this._AlbumID;
			}
			set
			{
				if ((this._AlbumID != value))
				{
					this.OnAlbumIDChanging(value);
					this.SendPropertyChanging();
					this._AlbumID = value;
					this.SendPropertyChanged("AlbumID");
					this.OnAlbumIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ImgUrl", DbType="NVarChar(50) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string ImgUrl
		{
			get
			{
				return this._ImgUrl;
			}
			set
			{
				if ((this._ImgUrl != value))
				{
					this.OnImgUrlChanging(value);
					this.SendPropertyChanging();
					this._ImgUrl = value;
					this.SendPropertyChanged("ImgUrl");
					this.OnImgUrlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ImgName", DbType="NVarChar(50) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string ImgName
		{
			get
			{
				return this._ImgName;
			}
			set
			{
				if ((this._ImgName != value))
				{
					this.OnImgNameChanging(value);
					this.SendPropertyChanging();
					this._ImgName = value;
					this.SendPropertyChanged("ImgName");
					this.OnImgNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ImgTitle", DbType="NVarChar(30) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string ImgTitle
		{
			get
			{
				return this._ImgTitle;
			}
			set
			{
				if ((this._ImgTitle != value))
				{
					this.OnImgTitleChanging(value);
					this.SendPropertyChanging();
					this._ImgTitle = value;
					this.SendPropertyChanged("ImgTitle");
					this.OnImgTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ImgDescript", DbType="NVarChar(500) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string ImgDescript
		{
			get
			{
				return this._ImgDescript;
			}
			set
			{
				if ((this._ImgDescript != value))
				{
					this.OnImgDescriptChanging(value);
					this.SendPropertyChanging();
					this._ImgDescript = value;
					this.SendPropertyChanged("ImgDescript");
					this.OnImgDescriptChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Px", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public int Px
		{
			get
			{
				return this._Px;
			}
			set
			{
				if ((this._Px != value))
				{
					this.OnPxChanging(value);
					this.SendPropertyChanging();
					this._Px = value;
					this.SendPropertyChanged("Px");
					this.OnPxChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
